{"version":3,"sources":["components/js/todo.js","components/js/employee.js","components/js/search.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","state","id","data","userId","title","completed","className","this","Component","Employee","getTasks","fetch","then","response","json","setTasks","catch","err","console","log","taskList","length","setState","errorMessage","todoList","closeOverlay","name","email","city","address","website","bind","onClick","style","map","task","SearchBar","searchEmployees","employeeData","filteredEmployees","employee","toLowerCase","includes","searchValue","push","searchResult","setSearchValue","e","target","value","clearSearch","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.235f2a4d.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport '../css/todo.css'\n\nexport class ToDoList extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.data.id || null,\n            userId: this.props.data.userId || null,\n            title: this.props.data.title || null,\n            completed: this.props.data.completed || null\n        }\n    };\n\n    render(){\n        return(\n            <tr className='task'>\n                <td className='taskName'>{this.state.title}</td>\n                <td className='status'>{(this.state.completed)?'Yes':'No'}</td>\n            </tr>\n        )\n    }\n}","import { Component } from 'react';\nimport '../css/employee.css'\nimport { ToDoList } from './todo';\n\nexport class Employee extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.data.id || null,\n            name: this.props.data.name || null,\n            email: this.props.data.email || null,\n            city: this.props.data.address.city || null,\n            website: this.props.data.website || null,\n            todoList: [],\n            errorMessage: ''\n        }\n        this.getTasks = this.getTasks.bind(this);\n        this.setTasks = this.setTasks.bind(this);\n    }\n\n    getTasks = () => {\n        fetch(`https://jsonplaceholder.typicode.com/users/${this.state.id}/todos`)\n            .then(response => response.json())\n            .then(json => {this.setTasks(json)})\n            .catch(err => console.log('Eror' + err));\n    };\n\n    setTasks = (taskList) => {\n        if(taskList.length === 0)\n            this.setState({errorMessage:'Data is currently unavailable!'});\n        else\n            this.setState({todoList : taskList});\n    };\n\n    closeOverlay = () => {\n        this.setState({todoList : []});\n    };\n\n    render(){\n        return(\n            <div>\n                <div className='employeeInfo'>\n                    <div className='employeeDetails'>\n                        <div className='name'>Name: {this.state.name || 'Unavailable'}</div>\n                        <div className='email'>Email: {this.state.email || 'Unavailable'}</div>\n                        <div className='city'>City: {this.state.city || 'Unavailable'}</div>\n                        <div className='website'>Website: {this.state.website || 'Unavailable'}</div>\n                    </div>\n                    <button className='todoSubmit' onClick={this.getTasks}>Task Details</button>\n                </div>\n                <div className='todooverlay'\n                    style={{'display': (this.state.todoList.length) ? 'block' : 'none'}}\n                >\n                    <div className='closeOverlay' onClick={this.closeOverlay}>x</div>\n                    <div className='searchError'\n                        style={{'display': (this.state.errorMessage) ? 'block' : 'none'}}\n                    >{this.state.errorMessage}</div>\n                    <table className='taskContainer'>\n                        <thead>\n                            <tr>\n                                <th>Task</th>\n                                <th>Completed</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todoList.map(task => {\n                                    return <ToDoList key={task.id} data={task}></ToDoList>\n                                })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    };\n}","import { Component } from 'react';\nimport '../css/search.css';\nimport { Employee } from './employee';\n\nexport class SearchBar extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            searchValue: null,\n            errorMessage: '',\n            employeeData: [],\n            searchResult: []\n        };\n        this.searchEmployees = this.searchEmployees.bind(this);\n        this.setSearchValue = this.setSearchValue.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    };\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json => this.setState({employeeData : json}))\n            .catch(err => console.log(err))\n    }\n\n    searchEmployees = () => {\n        if(this.state.employeeData.length === 0){\n            this.setState({errorMessage:'Data is currently unavailable!'});\n        } else {\n            this.setState({errorMessage:''});\n            let filteredEmployees = [];\n\n            this.state.employeeData.map(employee => {\n                if(employee.name.toLowerCase().includes(this.state.searchValue.toLowerCase()) ||\n                employee.address.city.toLowerCase().includes(this.state.searchValue.toLowerCase()))\n                filteredEmployees.push(employee);\n            });\n\n            if(filteredEmployees.length === 0) \n                this.setState({errorMessage:'No matching results!'});\n            else\n                this.setState({searchResult: filteredEmployees});\n        }\n    };\n\n    setSearchValue = (e) => {\n        this.setState({\n            searchValue: e.target.value\n        });\n    };\n\n    clearSearch = () => {\n        this.setState({\n            searchValue: null,\n            errorMessage: '',\n            searchResult: []\n        })\n    }\n\n    render(){\n        return (\n            <>\n                <div className='search'>\n                    <input \n                        className='searchbar' \n                        placeholder='Enter employee name or city' \n                        onChange={this.setSearchValue}\n                    />\n                    <button \n                        className='searchSubmit' \n                        value={this.state.searchValue} \n                        onClick={this.searchEmployees}\n                    >Search</button>\n                    <button className='searchClear' onClick={this.clearSearch}>Clear</button>\n                </div>\n                <div className='searchError'\n                    style={{'display': (this.state.errorMessage) ? 'block' : 'none'}}\n                >{this.state.errorMessage}</div>\n                <div className='resultContainer'>\n                    {\n                        this.state.searchResult.map(employee => {\n                            return <Employee key={employee.id} data={employee}></Employee>\n                        })\n                    }\n                </div>\n            </>\n        );\n    };\n}","import './App.css';\nimport { SearchBar } from './components/js/search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBar></SearchBar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}